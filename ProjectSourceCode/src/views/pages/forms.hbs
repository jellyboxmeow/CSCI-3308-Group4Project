<div class="container my-5">
    <div class=""></div>
    <div class="forms-grid">
        {{#each forms}}
        <div class="card" style="width: 18rem;height: 20rem;">
            <div class="card-body">
                <h5 class="card-title">{{this.form_name}}</h5>
                <h6 class="card-subtitle mb-2 text-body-secondary">{{this.form_type}}</h6>
                <p class="card-desc">{{this.form_description}}</p>
                <p class="card-username-date">{{this.form_user}} {{this.form_date}}</a>
            </div>
        </div>
        {{/each}}
        <div class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#formModal"
            style="width: 18rem;height: 20rem;">
            <div class="card-body">
                <h5 class="card-title">Add Form</h5>
                <h1 class="card-subtitle mb-2 text-body-secondary">+</h1>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="formModal" tabindex="-1" aria-labelledby="formModalLabel" aria-hidden="true">
    <div class="model-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="formModalLabel">Add a New Form</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCommForm">
                    <input type="hidden" id="currUsername" value="{{user.username}}">
                    <label for="formName" class="form-label">Form Title</label>
                    <input type="text" class="form-cotrol" id="formName" name="formName" required
                        placeholder="Enter Title">
                    <select class="form-select" id="formType" aria-label="Form Type Selection">
                        <option selected>Select a Type</option>
                        <option value="1">Trading</option>
                        <option value="2">Showcase</option>
                        <option value="3">Collection</option>
                        <option value="4">Tournaments</option>
                        <option value="3">LFG</option>
                    </select>
                    <label for="formDesc" class="form-label">Form Description</label>
                    <textarea class="form-control" id="formDesc" name="formDesc" required
                        placeholder="Enter Description"></textarea>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js"></script>

    <script>
        // JavaScript for handling form submission and validation
        document.getElementById('addCommForm').addEventListener('submit', function (event) {
            event.preventDefault();  // Prevent the default form submission

            const users_name = document.getElementById('currUsername').value; // Get the current user's usn from the hidden input
            const form_name = document.getElementById('formName').value;
            const form_type = document.getElementById('formType').value;
            const form_description = document.getElementById('formDesc').value;
            const errorMessage = document.getElementById('error-message');

            // Simple validation to check if username is empty
            if (form_name.trim() === '') {
                errorMessage.style.display = 'block';
                errorMessage.innerText = 'Please enter a valid title.';
            } else {
                errorMessage.style.display = 'none';

                // Send the data to the server using fetch API
                fetch('/add-form', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ users_name, form_name, form_type, form_description }) // Sending the user ID and friend's username
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Close the modal after adding the friend successfully
                            var modal = bootstrap.Modal.getInstance(document.getElementById('friendModal'));
                            modal.hide();

                            // Show success message
                            const successMessage = document.createElement('div');
                            successMessage.classList.add('alert', 'alert-success');
                            successMessage.innerText = data.message || 'Added form successfully!';
                            document.querySelector('.container-fluid').prepend(successMessage);

                            // Remove the success message after 3 seconds
                            setTimeout(() => successMessage.remove(), 3000);
                            console.log(data);

                            // Dynamically add the new friend to the friend list
                            const formsGrid = document.querySelector('.forms-grid');
                            const newCard = document.createElement('div');
                            newCard.classList.add('card');
                            newCard.style.width = '18rem';
                            newCard.style.height = '20rem';
                            newCard.innerHTML = `
                    <div class="card-body">
                        <h5 class="card-title">${form_name}</h5>
                        <h6 class="card-subtitle mb-2 text-body-secondary">${form_type}</h6>
                        <p class="card-desc">${form_description}</p>
                        <p class="card-username-date">${users_name} ${new Date().toISOString().split('T')[0]}</p>
                    </div>
                `;
                            formsGrid.insertBefore(newCard, formsGrid.lastElementChild);

                            // Reset the form inputs
                            document.getElementById('formName').value = '';
                            document.getElementById('formType').value = '';
                            document.getElementById('formDesc').value = '';
                            console.log('Form added successfully!');
                        } else {
                            // Show an error message if something went wrong
                            console.error('Failed to add form:', data.message);
                            errorMessage.style.display = 'block';
                            errorMessage.innerText = data.message || 'Failed to add form.';
                        }
                    })
                    .catch(error => {
                        console.error('Error adding form:', error);
                    });
            }
        });
    </script>